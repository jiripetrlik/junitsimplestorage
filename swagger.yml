openapi: 3.0.0
info:
  description: Swagger file for Junit Simple Storage
  version: "1.0.0"
  title: Junit Simple Storage REST API
servers: 
  - url: /api
paths:
  /:
    get:
      operationId: "rest.get"
      summary: "Get test runs"
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          required: false
          description: "Page number"
        - name: "items"
          in: query
          schema:
            type: integer
          required: false
          description: "Items per page"
      responses:
        200:
          description: "List of test runs was returned"
  /import:
    post:
      operationId: "rest.import_junit"
      summary: "Import JUnit file to database"
      parameters:
        - name: labels
          in: query
          schema:
            type: string
      requestBody:
        description: JUnit report
        required: true
        content:
          application/xml:
            schema:
              type: string
      responses:
        201:
          description: "Successfully imported"
  /query:
    post:
      operationId: "rest.query"
      summary: "Query Junit storage"
      requestBody:
        description: "Query"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        200:
          description: "List of test runs was returned"
  /delete/{id}:
    delete:
      operationId: "rest.delete"
      summary: "Delete test run"
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Test run was deleted"
  /health:
    get:
      operationId: "rest.health"
      summary: "Health endpoint for readiness and health probes"
      description: "Return 200 if application is running"
      responses:
        200:
          description: "Application is healthy and running"
components:
  schemas:
    Query:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        testSuiteName:
          type: array
          items:
            type: string
        minTimeDate:
          type: string
          example: "2000-01-01 12:00:00"
        maxTimeDate:
          type: string
          example: "2000-01-01 12:00:00"
        hostname:
          type: array
          items:
            type: string
        name:
          type: array
          items:
            type: string
        classname:
          type: array
          items:
            type: string
        timeIsLower:
          type: number
        timeIsHigher:
          type: number
        state:
          type: array
          items:
            type: string
        messageContains:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
